#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ Twitch Translate Bot
"""

import logging
from translator import TranslationService

def setup_logging():
    """–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è —Ç–µ—Å—Ç–æ–≤"""
    logging.basicConfig(
        level=logging.INFO,
        format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
    )

def test_translations():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –ø–µ—Ä–µ–≤–æ–¥–∞"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π –ø–µ—Ä–µ–≤–æ–¥–∞...")
    print("=" * 50)
    
    translator = TranslationService()
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ —Ñ—Ä–∞–∑—ã
    test_phrases = [
        ("Hello, how are you?", "en", "ru"),
        ("–ü—Ä–∏–≤–µ—Ç, –∫–∞–∫ –¥–µ–ª–∞?", "ru", "en"),
        ("Good morning!", "en", "ru"),
        ("–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ!", "ru", "en"),
        ("I love programming", "en", "ru"),
        ("–Ø –ª—é–±–ª—é –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ", "ru", "en"),
    ]
    
    for text, source_lang, target_lang in test_phrases:
        print(f"\nüìù –ò—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç: {text}")
        print(f"üåê –ü–µ—Ä–µ–≤–æ–¥ —Å {source_lang} –Ω–∞ {target_lang}:")
        
        if target_lang == 'ru':
            result = translator.translate_to_russian(text)
        else:
            result = translator.translate_to_english(text)
            
        if result:
            print(f"‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–≤–æ–¥–∞")
            
    print("\n" + "=" * 50)

def test_language_detection():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —è–∑—ã–∫–∞"""
    print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —è–∑—ã–∫–∞...")
    print("=" * 50)
    
    translator = TranslationService()
    
    test_texts = [
        "Hello world",
        "–ü—Ä–∏–≤–µ—Ç –º–∏—Ä",
        "Programming is fun",
        "–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ —ç—Ç–æ –≤–µ—Å–µ–ª–æ",
        "123456",
        "!@#$%^"
    ]
    
    for text in test_texts:
        detected = translator.detect_language(text)
        print(f"üìù '{text}' -> {detected or '–Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω'}")
        
    print("=" * 50)

def show_bot_commands():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞"""
    print("\nü§ñ –ö–æ–º–∞–Ω–¥—ã Twitch Translate Bot:")
    print("=" * 50)
    print("‚Ä¢ !ru <—Ç–µ–∫—Å—Ç> - –ø–µ—Ä–µ–≤–æ–¥ –Ω–∞ —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫")
    print("‚Ä¢ !en <—Ç–µ–∫—Å—Ç> - –ø–µ—Ä–µ–≤–æ–¥ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫")
    print("‚Ä¢ !auto @nickname on/off - –∞–≤—Ç–æ-–ø–µ—Ä–µ–≤–æ–¥ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    print("‚Ä¢ !translate on/off - –≥–ª–æ–±–∞–ª—å–Ω—ã–π –ø–µ—Ä–µ–≤–æ–¥ (–º–æ–¥–µ—Ä–∞—Ç–æ—Ä—ã)")
    print("=" * 50)

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üéÆ Twitch Translate Bot - –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ")
    print("=" * 60)
    
    setup_logging()
    
    try:
        # –¢–µ—Å—Ç –ø–µ—Ä–µ–≤–æ–¥–æ–≤
        test_translations()
        
        # –¢–µ—Å—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —è–∑—ã–∫–∞
        test_language_detection()
        
        # –ü–æ–∫–∞–∑ –∫–æ–º–∞–Ω–¥
        show_bot_commands()
        
        print("\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        print("\nüí° –î–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: python main.py")
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        return False
        
    return True

if __name__ == "__main__":
    success = main()
    if not success:
        print("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...")
        input()
