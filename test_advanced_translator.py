#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫–∞ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π —Å–ª–µ–Ω–≥–∞
"""

import asyncio
import logging
from translator_advanced import AdvancedTranslationService

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)

def test_translator():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —É–ª—É—á—à–µ–Ω–Ω—ã–π –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫"""
    translator = AdvancedTranslationService()
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ —Ñ—Ä–∞–∑—ã —Å —Å–ª–µ–Ω–≥–æ–º –∏ —Å–æ–∫—Ä–∞—â–µ–Ω–∏—è–º–∏
    test_cases = [
        # –†—É—Å—Å–∫–∏–π -> –ê–Ω–≥–ª–∏–π—Å–∫–∏–π
        ("–ø—Ä–∏–≤–µ—Ç, –∫–∞–∫ –¥–µ–ª–∞?", "ru"),
        ("–∫—Ä—É—Ç–æ, —Å–ø–∞—Å–∏–±–æ!", "ru"),
        ("–≤–∞—É, —ç—Ç–æ –æ—Ñ–∏–≥–µ–Ω–Ω–æ!", "ru"),
        ("–ª–æ–ª, –∑–∞–±–∞–≤–Ω–æ", "ru"),
        ("–∏–º—Ö–æ, —ç—Ç–æ –Ω–µ –æ—á–µ–Ω—å", "ru"),
        
        # –ê–Ω–≥–ª–∏–π—Å–∫–∏–π -> –†—É—Å—Å–∫–∏–π
        ("hello, how are you?", "en"),
        ("cool, thanks!", "en"),
        ("wow, that's awesome!", "en"),
        ("lol, funny", "en"),
        ("imo, that's not very good", "en"),
        
        # –° —ç–º–æ–¥–∑–∏
        ("–ø—Ä–∏–≤–µ—Ç! üòä –∫–∞–∫ –¥–µ–ª–∞?", "ru"),
        ("wow! üéâ that's amazing!", "en"),
        ("–ª–æ–ª üòÇ –∑–∞–±–∞–≤–Ω–æ", "ru"),
        ("cool! üëç thanks", "en"),
    ]
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫–∞\n")
    
    for i, (text, target_lang) in enumerate(test_cases, 1):
        print(f"–¢–µ—Å—Ç {i}:")
        print(f"  –ò—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç: {text}")
        
        if target_lang == "ru":
            result = translator.translate_to_russian(text)
            direction = "EN -> RU"
        else:
            result = translator.translate_to_english(text)
            direction = "RU -> EN"
            
        print(f"  –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: {direction}")
        print(f"  –†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
        print(f"  –û–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π —è–∑—ã–∫: {translator.detect_language(text)}")
        print("-" * 50)
        
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    stats = translator.get_stats()
    print("\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–µ—Ä–µ–≤–æ–¥–æ–≤:")
    for key, value in stats.items():
        if isinstance(value, float):
            print(f"  {key}: {value:.2f}")
        else:
            print(f"  {key}: {value}")

if __name__ == "__main__":
    test_translator()
